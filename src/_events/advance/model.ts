import { getUserId } from "../../_utils/storage_handler";
import { AdvanceType } from "./type";

export const validateAdvance = (body: AdvanceType) => {
    const { value, cost, employee } = body;
    if(value === 0 || value === undefined) throw new Error(`Valor vacío`);
    if(cost === 0 || cost === undefined) throw new Error(`Costo vacío`);
    if(employee === '' || employee === undefined) throw new Error(`Empleado vacío`);
}

export const transformEntityAdvance = (entity: AdvanceType) => {
    let newEnt = {...entity}
    if(typeof newEnt.employee === 'object') newEnt.employee = newEnt.employee?.uuid;
    if(typeof newEnt.state === 'object') newEnt.state = newEnt.state?.cod;
    return newEnt;
}

export const buildEmptyAdvance = (): AdvanceType => {
    return {
        uuid: undefined,
        created_date: new Date(),
        value: 0,
        cost: 0,
        employee: '',
        state: 'PEND',
        useFintech: 0,
    };
}

export const buildAdvanceValueCostEmployee = (value: number, cost: number): AdvanceType => {
    return {
        ...buildEmptyAdvance(),
        employee: getUserId(),
        value,
        cost
    };
}


/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */