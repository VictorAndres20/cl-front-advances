import { AdvancePeriodType } from "./type";

export const validateAdvancePeriod = (body: AdvancePeriodType) => {
    const { name, created_date, finished_date, enterprise_id, period_to_finish } = body;
    if(name === null || name === undefined || name === '') throw new Error(`Nombre de nuevo periodo vacío`);
    if(created_date === null || created_date === undefined || created_date === '') throw new Error(`Fecha de creación vacío`);
    if(finished_date === null || finished_date === undefined || finished_date === '') throw new Error(`Fecha de finalización vacío`);
    if(enterprise_id === null || enterprise_id === undefined || enterprise_id === 0) throw new Error(`Empresa vacío`);
    if(period_to_finish === null || period_to_finish === undefined || period_to_finish === '') throw new Error(`Periodo a finalizar vacío`);
}

export const transformEntityAdvancePeriod = (entity: AdvancePeriodType) => {
    let newEnt = {...entity}
    return newEnt;
}

export const buildEmptyAdvancePeriod = (): AdvancePeriodType => {
    return {
        uuid: undefined,
        name: '',
        created_date: new Date(),
        finished_date: new Date(),
        enterprise_id: 0,
        period_to_finish: '',
    };
}

export const buildAdvancePeriod = (entity: AdvancePeriodType,enterprise_id: number, period_to_finish: string): AdvancePeriodType => {
    return {
        ...entity,
        enterprise_id,
        period_to_finish,
    };
}


/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */