import { UserType } from "./type";

export const validateUser = (body: UserType) => {
    const { name, email, login, password, rol, enterprise } = body;
    if(name === '' || name === undefined) throw new Error(`Nombre vacío`);
    if(email === '' || email === undefined) throw new Error(`Email vacío`);
    if(login === '' || login === undefined) throw new Error(`Login vacío`);
    if(!body.uuid && (password === '' || password === undefined)) throw new Error(`Contraseña vacío`);
    if(enterprise === 0 || enterprise === undefined) throw new Error(`Empresa vacío`);
    if(rol === '' || rol === undefined) throw new Error(`Rol vacío`);
}

export const transformEntityUser = (entity: UserType) => {
    let newEnt = {...entity}
    delete newEnt.password;
    if(typeof newEnt.enterprise === 'object'){
        newEnt.enterprise = newEnt.enterprise?.id;
    }
    if (typeof newEnt.rol === 'object' && newEnt.rol !== null) {
        newEnt.rol = newEnt.rol.cod;
    }
    return newEnt;
}

export const buildEmptyUser = (): UserType => {
    return {
        uuid: '',
        name: '',
        email: '',
        login: '',
        password: '',
        active: 1,
        enterprise: 0,
        rol: '',
    };
}



/** Generated by https://github.com/VictorAndres20 code generator for database, NestJS, React */